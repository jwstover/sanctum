defmodule Sanctum.Repo.Migrations.AddCards do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:cards, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :card_type, :text, null: false
      add :cost, :bigint
      add :text, :text
      add :flavor_text, :text
      add :set_code, :text, null: false
      add :card_number, :text, null: false
      add :quantity, :bigint, null: false, default: 1
      add :unique, :boolean, null: false, default: false
      add :aspect, :text
      add :attack, :bigint
      add :thwart, :bigint
      add :defense, :bigint
      add :hit_points, :bigint
      add :scheme, :bigint
      add :recovery, :bigint
      add :resource_type, :text
      add :resource_count, :bigint, null: false, default: 0
      add :traits, {:array, :text}, null: false, default: []
      add :keywords, {:array, :text}, null: false, default: []
      add :stage, :bigint
      add :boost_icons, :bigint, null: false, default: 0
      add :hand_size, :bigint
      add :base_threat, :bigint
      add :escalation_threat, :bigint
      add :acceleration_icon, :boolean, null: false, default: false
      add :consequential_damage, :bigint

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create unique_index(:cards, [:set_code, :card_number], name: "cards_unique_card_in_set_index")
  end

  def down do
    drop_if_exists unique_index(:cards, [:set_code, :card_number],
                     name: "cards_unique_card_in_set_index"
                   )

    drop table(:cards)
  end
end
